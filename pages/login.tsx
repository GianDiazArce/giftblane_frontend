import { NextPage } from "next";
import axios from "axios";
import "reactjs-popup/dist/index.css";
import Router from "next/router";
import Head from "next/head";
import React from "react";
import { FaRegEnvelope } from "react-icons/fa";
import { MdLockOutline } from "react-icons/md";
import { useState } from "react";
import Link from "next/link";

const Login: NextPage = () => {
  const [submitting, setSubmitting] = useState(false);
  const [email, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    // Verificar que la contrase침a cumpla con los criterios de seguridad
    const passwordValidator =
      /^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[!@#$%^&*()/=+?[\]{}~-])[A-Za-z\d!@#$%^&*()/=+?[\]{}~-]{8,}$/;
    const isPasswordValid = passwordValidator.test(password);
    if (!isPasswordValid) {
      setError(
        "La contrase침a debe contener al menos una letra may칰scula, una letra min칰scula, un car치cter num칠rico y un car치cter especial y debe tener al menos 8 caracteres"
      );
      return;
    }
    try {
      // Enviar una solicitud a la ruta de inicio de sesi칩n en el backend
      const response = await axios.post("http://localhost:3005/auth/login", {
        email,
        password,
      });
      // Si el inicio de sesi칩n es exitoso, almacene el token en una cookie
      document.cookie = `token=${response.data.token}`;
      // Redirigir a la ruta protegida
      Router.push("/dashboard");
    } catch (err: any) {
      // Obtener el estado de error y el mensaje
      const status = err.response.status;
      // const message = err.response.data.message;

      // Establecer el mensaje de error apropiado seg칰n el estado del error
      let errorMessage = "";
      switch (status) {
        case 200:
          // errorMessage = "Login successful";
          break;
        case 400:
          errorMessage = "You have entered an invalid password";
          break;
        case 401:
          errorMessage = "Unauthorized";
          break;
        case 403:
          errorMessage = "Forbidden";
          break;
        case 404:
          errorMessage = "Not found";
          break;
        case 500:
          errorMessage = 'parameter "email" has invalid "undefined" value';
          break;
        default:
          errorMessage = "An error occurred";
          break;
      }

      setError(errorMessage);
      // Resetear el formulario de inicio de sesi칩n
      // Deshabilitado durante desarrollo
      // setUsername("");
      // setPassword("");
    }
  };

  return (
    <div className="flex flex-col items-center min-h-screen py-2 bg-white dark:bg-gray-900">
      <Head>
        <title>Breaking Bakes - Log In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pastel.ico" />
      </Head>

      <main className="flex flex-col items-center justify-center w-full flex-1 px-20 text-center">
        <nav className="space-x-10 mb-12 flex justify-between dark:text-green-300 text-slate-600">
          <Link href="/">
            <h1 className="font-burtons text-8xl">
              Breaking{" "}
              <span className="text-teal-600 font-medium dark:text-teal-400">
                Bakes
              </span>
            </h1>
          </Link>
          <ul className=" items-center hidden md:flex"></ul>
        </nav>
        <div className="bg-white roundes-2xl shadow-2xl flex w-2/3 max-w-4xl dark:bg-gray-800">
          <div className="w-3/5 p-5">
            <div className="text-left font-bold"></div>

            <div className="py-10">
              <h2 className="text-3xl font-bold dark:text-teal-500 text-green-500 mb-2">
                Login as Admin
              </h2>
              <div className="border-2 w-10 border-green-400 dark:border-teal-400 inline-block mb-2"></div>

              <p className="text-gray-400 my-3 dark:text-gray-100">
                or use your email account
              </p>
              <form
                onSubmit={(event) => {
                  event.preventDefault();
                  handleSubmit(event);
                }}
              >
                <div className="flex flex-col items-center ">
                  <div className="bg-gray-100 w-64 p-2 flex items-center mb-3">
                    <FaRegEnvelope className="text-gray-400 mr-2" />
                    <input
                      name="username"
                      value={email}
                      required
                      disabled={submitting}
                      placeholder=""
                      onChange={(e) => setUsername(e.target.value)}
                      aria-label="Username"
                      className="bg-gray-100 outline-none text-sm flex-1"
                    />
                  </div>
                </div>
                <div className="flex flex-col items-center ">
                  <div className="bg-gray-100 w-64 p-2 flex items-center mb-3">
                    <MdLockOutline className="text-gray-400 mr-2" />
                    <input
                      type="password"
                      name="password"
                      value={password}
                      required
                      disabled={submitting}
                      placeholder=""
                      aria-label="Password"
                      onChange={(e) => setPassword(e.target.value)}
                      className="bg-gray-100 outline-none text-sm flex-1"
                    />
                  </div>

                  <div className="flex justify-between w-64 mb-5">
                    <label className="flex items-center text-xs dark:text-gray-100">
                      <input
                        type="checkbox"
                        name="remember"
                        className="mr-1 "
                      />
                      Remember me
                    </label>
                    <a href="#" className="text-xs dark:text-gray-100">
                      Forgot password
                    </a>
                  </div>
                  <button
                    className="px-4"
                    type="submit"
                    disabled={submitting || !email || !password}
                  ></button>
                  <a
                    href="/admin"
                    className="border-2 border-green-600 text-green-600 rounded-full px-12 py-2 inline-block font-semibold dark:hover:bg-teal-500 
                            dark:hover:text-white hover:bg-green-500 
                            hover:text-white  dark:border-teal-500 dark:text-teal-500 "
                  >
                    Sign In
                  </a>
                </div>
              </form>
            </div>
          </div>
          <div className="w-2/5 bg-teal-600 font-medium dark:bg-teal-400  text-white rounded-tr-2xl rounded-br-2xl py-36 px-12">
            <h2 className="text-3xl font-bold mb-2 dark:text-gray-600">
              Hello, Baker!
            </h2>
            <div className="border-2 w-10 border-white inline-block mb-2 dark:border-gray-600"></div>

            <p className="mb-2 dark:text-gray-600">
              Necesitamos tu informacion para saber si eres el admin. 游땙
            </p>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Login;
